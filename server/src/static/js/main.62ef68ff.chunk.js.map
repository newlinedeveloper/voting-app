{"version":3,"sources":["assets/bi_polar.png","globals.js","actions/loginActions.js","components/Login/index.js","actions/registerActions.js","components/register.js","actions/foodActions.js","components/Recipe/index.js","actions/candidateActions.js","components/Vote/index.js","components/Navbar/navbar.js","components/Loader/loader.js","components/DashboardTabs/Home/HomeOptions/candidate.js","components/DashboardTabs/Home/HomeOptions/newCandidate.js","components/DashboardTabs/Home/HomeOptions/candidateDetails.js","components/DashboardTabs/Home/HomeOptions/editCandidate.js","components/DashboardTabs/Home/HomeOptions/route.js","components/DashboardTabs/Home/index.js","components/tabRoutes.js","components/Dashboard/dashboard.js","components/Routes.js","App.js","serviceWorker.js","index.js","assets/react.png"],"names":["module","exports","SERVER_URI","APP_KEY","loginUser","email","password","a","res","url","axios","post","headers","Accept","data","console","log","Login","state","loading","_login","e","preventDefault","setState","then","err","notification","success","message","placement","localStorage","setItem","JSON","stringify","props","history","push","error","className","style","height","backgroundColor","src","Logo","alt","width","margin","top","left","bottom","right","position","boxShadow","padding","textAlign","letterSpacing","marginTop","onSubmit","this","size","placeholder","value","onChange","target","prefix","UserOutlined","Password","LockOutlined","type","htmlType","Component","registerUser","name","Register","_register","MailOutlined","fetchAllFoods","fetch","FOOD_URI","method","resObj","json","Content","Layout","Meta","Card","TextArea","Input","CommentList","comments","dataSource","header","length","itemLayout","renderItem","Editor","submitting","Item","rows","onClick","Recipe","userId","user","slotModal","description","id","image","category","label","price","foodArray","viewFood","count","total","visible","_getFoodsInfo","range","start","end","result","i","disabledDate","current","moment","endOf","showDrawer","onClose","handleSubmit","setTimeout","author","avatar","content","datetime","fromNow","handleChange","parse","getItem","_id","createSlotModal","centered","title","confirmLoading","footer","onCancel","for","disabled","errName","foodCards","map","food","cover","actions","SettingOutlined","key","EditOutlined","EllipsisOutlined","marginBottom","bodyStyle","paddingBottom","marginRight","defaultValue","LikeOutlined","CoffeeOutlined","HeartOutlined","class","registerCandidate","phone","Authorization","getCandidates","paginate","deleteCandidate","candidateId","updateCandidate","getCandidateById","get","Vote","editUserModal","deleteUserModal","userArray","username","isCustomerAdmin","currentPage","totalUsers","pageLoading","createUserModal","password2","userModal","errPhone","errEmail","errUsername","errPassword","errPassword2","errPasswordMatch","errEmailFormat","_getUserInfo","candidates","totalCandidates","paddingTop","verticalAlign","fontSize","split","toUpperCase","fontWeight","color","selectedUser","cursor","icon","onMouseEnter","editHover","onMouseLeave","deletemodal","Modal","aria-labelledby","show","onHide","Header","closeButton","Title","Body","status","subTitle","active","imageStyle","page","itemRender","originalElement","Icon","NavBar","logout","clear","window","go","bg","expand","href","biPolarLogo","BellOutlined","overlay","Divider","danger","trigger","Loader","Search","Candidates","userArrayTemp","selectedRowKeys","datasource","selectAll","selectedUsers","selectedUserId","selectedName","searchField","redirect","includes","updateUser","customer","deleteUser","clearInputs","handleSearch","prevState","filter","toLowerCase","handleClear","onSelectChange","handleClick","currentTarget","menu","headerOptions","PlusOutlined","arrow","marginLeft","DownOutlined","transform","enterButton","SearchOutlined","allowClear","onSearch","tableBody","item","scope","checked","usersArray","filteredArray","temp","highlightStyle","searchWords","autoEscape","textToHighlight","toString","to","exclude","deleteMultipleUser","layout","labelCol","span","wrapperCol","NewCandidate","allUsers","duplicateErr","componentDidMount","catch","register","handleBack","onBack","labelAlign","required","border","test","UserDetails","modal","match","params","candidate","handleEdit","handleDelete","customerId","handleConfirm","bordered","EditUser","emailChange","candiate","Routes","exact","path","component","CandidateDetails","EditCandidate","from","Sider","Home","location","mode","defaultSelectedKeys","pathname","defaultOpenKeys","borderRight","LaptopOutlined","TabRoutes","UserDashboard","PrivateRoute","rest","loggedIn","render","token","Dashboard","App","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.62ef68ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bi_polar.e06ab775.png\";","// let context = \"TEST\"; //TEST (for testing) and PROD (for Production)\n\n\nexport const SERVER_URI = \"http://localhost:8000/api\";\nexport const FOOD_URI = \"http://starlord.hackerearth.com\";\n  // context === \"PROD\"\n  //   ? \"\"\n  //   : window.location.hostname === \"localhost\"\n  //   ? \"http://localhost:8000/api\"\n  //   : \"https://residential-portal.herokuapp.com:8000/api\";\nexport const APP_KEY =\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjZGZuIiwibmFtZSI6ImNsb3VkREZOIEVuZHBvaW50IiwiaWF0IjoxNTE2MjM5MDIyfQ.u7K0eXq9XhDkvW-SgC-neczEk6u2sOERJJZ59ygSpxw\";\n","import axios from \"axios\";\nimport { SERVER_URI, APP_KEY } from \"../globals\";\n\n// User login /users/login\nexport const loginUser = async (email, password) => {\n  try {\n    let res = null;\n    let url = null;\n    url = `${SERVER_URI}/users/login`;\n    res = await axios.post(\n      url,\n      { email, password },\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"X-Key\": APP_KEY,\n        },\n      }\n    );\n\n    return res.data;\n  } catch (err) {\n    console.log(\"Internal server error\")\n    return err;\n  }\n};\n","import React, { Component } from \"react\";\nimport { Button, notification, Input } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport Logo from \"./../../assets/react.png\";\nimport { loginUser } from \"../../actions/loginActions\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    loading: false,\n  };\n  _login = (e) => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    let data = loginUser(this.state.email, this.state.password);\n    data.then((res, err) => {\n      if (err) {\n        console.log(err);\n      } else {\n        if (res.err) {\n          console.log(err);\n        } else {\n          if (res.data) {\n            notification.success({\n              message: \"Login Successful\",\n              placement: \"bottomRight\",\n            });\n            localStorage.setItem(\"user\", JSON.stringify(res.data));\n\n            this.props.history.push(\"/dashboard\");\n          } else {\n            notification.error({\n              message: \"Invalid User Credentials\",\n              placement: \"bottomRight\",\n            });\n          }\n          this.setState({ loading: false });\n        }\n      }\n    });\n  };\n  render() {\n    return (\n      <div>\n        <div\n          className=\"p-4\"\n          style={{ height: \"100vh\", backgroundColor: \"#f4f4f4\" }}\n        >\n          <img src={Logo} alt=\"Logo\" style={{ width: \"7%\" }} />\n          <div\n            style={{\n              margin: \"auto\",\n              width: \"500px\",\n              height: \"400px\",\n              backgroundColor: \"#ffffff\",\n              top: 0,\n              left: 0,\n              bottom: 0,\n              right: 0,\n              position: \"absolute\",\n              boxShadow: \"0 0 20px #c7c7c7\",\n              padding: \"2%\",\n            }}\n          >\n            <h2\n              style={{\n                textAlign: \"center\",\n                letterSpacing: \"2px\",\n                marginTop: \"5%\",\n              }}\n            >\n              LOGIN\n            </h2>\n            <div className=\"mt-5 pl-4 pr-4\">\n              <form onSubmit={this._login}>\n                <div className=\"p-3\">\n                  <Input\n                    size=\"large\"\n                    placeholder=\"Email\"\n                    value={this.state.email}\n                    onChange={(e) => {\n                      this.setState({ email: e.target.value });\n                    }}\n                    prefix={<UserOutlined />}\n                  />\n                </div>\n                <div className=\"p-3\">\n                  <Input.Password\n                    size=\"large\"\n                    placeholder=\"Password\"\n                    value={this.state.password}\n                    onChange={(e) => {\n                      this.setState({ password: e.target.value });\n                    }}\n                    prefix={<LockOutlined />}\n                  />\n                </div>\n                <div className=\"p-3\">\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    style={{ letterSpacing: \"1px\" }}\n                    loading={this.state.loading}\n                  >\n                    Login\n                  </Button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import axios from \"axios\";\nimport { SERVER_URI, APP_KEY } from \"../globals\";\n\n// User Register /users/register\nexport const registerUser = async (name, email, password) => {\n  try {\n    let res = null;\n    let url = null;\n    url = `${SERVER_URI}/users/register`;\n    res = await axios.post(\n      url,\n      { name, email, password },\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"X-Key\": APP_KEY,\n        },\n      }\n    );\n\n    return res.data;\n  } catch (err) {\n    return err;\n  }\n};\n","import React, { Component } from \"react\";\nimport { Button, notification, Input } from \"antd\";\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\nimport Logo from \"../assets/react.png\";\nimport { registerUser } from \"../actions/registerActions\";\n\nclass Register extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    loading: false,\n  };\n  _register = (e) => {\n    e.preventDefault();\n\n    if (\n      this.state.name !== \"\" &&\n      this.state.email !== \"\" &&\n      this.state.password !== \"\"\n    ) {\n      this.setState({ loading: true });\n      let data = registerUser(\n        this.state.name,\n        this.state.email,\n        this.state.password\n      );\n      data.then((res, err) => {\n        if (err) {\n          console.log(err);\n        } else {\n          if (res.err) {\n            console.log(res.err);\n          } else {\n            if (res.data === \"User Registered\") {\n              notification.success({\n                message: \"Registration Successful\",\n                placement: \"bottomRight\",\n              });\n            } else {\n              notification.error({\n                message: \"Register Unsuccessfull\",\n                placement: \"bottomRight\",\n              });\n            }\n            this.setState({\n              loading: false,\n              name: \"\",\n              email: \"\",\n              password: \"\",\n            });\n          }\n        }\n      });\n    }\n  };\n  render() {\n    return (\n      <div>\n        <div\n          className=\"p-4\"\n          style={{ height: \"100vh\", backgroundColor: \"#f4f4f4\" }}\n        >\n          <img src={Logo} alt=\"Logo\" style={{ width: \"7%\" }} />\n          <div\n            style={{\n              margin: \"auto\",\n              width: \"500px\",\n              height: \"450px\",\n              backgroundColor: \"#ffffff\",\n              top: 0,\n              left: 0,\n              bottom: 0,\n              right: 0,\n              position: \"absolute\",\n              boxShadow: \"0 0 20px #c7c7c7\",\n              padding: \"2%\",\n            }}\n          >\n            <h2\n              style={{\n                textAlign: \"center\",\n                letterSpacing: \"2px\",\n                marginTop: \"5%\",\n              }}\n            >\n              REGISTER\n            </h2>\n            <div className=\"mt-5 pl-4 pr-4\">\n              <form onSubmit={this._register}>\n                <div className=\"p-3\">\n                  <Input\n                    size=\"large\"\n                    placeholder=\"Name\"\n                    value={this.state.name}\n                    onChange={(e) => {\n                      this.setState({ name: e.target.value });\n                    }}\n                    prefix={<UserOutlined />}\n                  />\n                </div>\n                <div className=\"p-3\">\n                  <Input\n                    size=\"large\"\n                    placeholder=\"Email\"\n                    value={this.state.email}\n                    onChange={(e) => {\n                      this.setState({ email: e.target.value });\n                    }}\n                    prefix={<MailOutlined />}\n                  />\n                </div>\n                <div className=\"p-3\">\n                  <Input.Password\n                    size=\"large\"\n                    placeholder=\"Password\"\n                    value={this.state.password}\n                    onChange={(e) => {\n                      this.setState({ password: e.target.value });\n                    }}\n                    prefix={<LockOutlined />}\n                  />\n                </div>\n                <div className=\"p-3\">\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    style={{ letterSpacing: \"1px\" }}\n                    loading={this.state.loading}\n                  >\n                    Register\n                  </Button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import axios from \"axios\";\nimport { SERVER_URI, APP_KEY,FOOD_URI } from \"../globals\";\n\n\nexport const fetchAllFoods = async () => {\n  try {\n    const resObj = await fetch(FOOD_URI + `/recipe`, {\n      method: \"get\",\n    });\n\n    const res = await resObj.json();\n    return res;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\n","import React, { Component } from 'react'\nimport { \n    Layout, Card, Avatar,notification,Button, Input,DatePicker,Tooltip,TimePicker,Modal,Badge,Statistic,Divider,\n    Comment, Form,List,Rate,Drawer\n} from 'antd';\nimport { EditOutlined, EllipsisOutlined, SettingOutlined,LikeOutlined,CoffeeOutlined,HeartOutlined } from '@ant-design/icons';\nimport moment from 'moment';\n\n\n  import { fetchAllFoods } from \"../../actions/foodActions\";\n  \nimport Logo from \"./../../assets/bi_polar.png\";\n\n// import { Modal } from \"react-bootstrap\";\n\nconst { Content } = Layout;\nconst { Meta } = Card;\nconst { TextArea } = Input;\n\n\n\nconst CommentList = ({ comments }) => (\n    <List\n      dataSource={comments}\n      header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n      itemLayout=\"horizontal\"\n      renderItem={props => <Comment {...props} />}\n    />\n  );\n  \n  const Editor = ({ onChange, onSubmit, submitting, value }) => (\n    <>\n      <Form.Item>\n        <TextArea rows={4} onChange={onChange} value={value} />\n      </Form.Item>\n      <Form.Item>\n        <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\n          Add Comment\n        </Button>\n      </Form.Item>\n    </>\n  );\n\n\n\nclass Recipe extends Component {\n\n    state = {\n\n        userId: \"\",\n        user: \"\",\n        name: \"\",\n        email: \"\",\n        slotModal: false,\n        description : \"\",\n        id: \"\",\n        image : \"\",\n        category: \"\",\n        label: \"\",\n        price: \"\",\n        foodArray: [],\n        viewFood: false,\n        comments: [],\n        submitting: false,\n        value: '',\n        count: 1,\n        total: 1,\n        visible: false\n    }\n\n    componentDidMount() {\n        if (JSON.parse(localStorage.getItem(\"user\"))) {\n          console.log(JSON.parse(localStorage.getItem(\"user\")).user);\n          this.setState({\n            userId : JSON.parse(localStorage.getItem(\"user\")).user._id,\n            name : JSON.parse(localStorage.getItem(\"user\")).user.name,\n            email: JSON.parse(localStorage.getItem(\"user\")).user.email,\n          });\n          this._getFoodsInfo();\n          notification.success({\n                message: \"Recipe panel Opened\",\n                placement: \"bottomRight\",\n              });\n        }\n\n      }\n\n      _getFoodsInfo = () => {\n        let foodDetails = fetchAllFoods();\n        foodDetails.then((res, err) => {\n          if (err) console.log(err);\n          else {\n            console.log(res);\n            this.setState(\n              { \n                foodArray : res,\n               },\n            );\n          }\n        });\n      }\n\n      range = (start, end) => {\n        const result = [];\n        for (let i = start; i < end; i++) {\n          result.push(i);\n        }\n        return result;\n      }\n\n      disabledDate = (current) => {\n        // Can not select days before today and today\n        return current && current < moment().endOf('day');\n      }\n\n      \n\n      showDrawer = () => {\n        this.setState({\n          visible: true,\n        });\n      };\n    \n      onClose = () => {\n        this.setState({\n          visible: false,\n        });\n      };\n\n      handleSubmit = () => {\n        if (!this.state.value) {\n          return;\n        }\n    \n        this.setState({\n          submitting: true,\n        });\n\n        setTimeout(() => {\n            this.setState({\n              submitting: false,\n              value: '',\n              comments: [\n                {\n                  author: 'Han Solo',\n                  avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n                  content: <p>{this.state.value}</p>,\n                  datetime: moment().fromNow(),\n                },\n                ...this.state.comments,\n              ],\n            });\n          }, 1000);\n        };\n\n        handleChange = e => {\n            this.setState({\n              value: e.target.value,\n            });\n          };\n    \n\n      \n\n\n\n\n    render() {\n\n        const { comments, submitting, value } = this.state;\n\n        let createSlotModal = (\n            <Modal\n                centered\n                title={this.state.name}\n                visible={this.state.slotModal}\n                confirmLoading=\"true\"\n                style={{marginTop: 80}}\n                footer={[\n                <Button\n                    onClick={(e) => {\n                    this.setState({ slotModal: false });\n                    }}\n                >\n                    Cancel\n                </Button>,\n                <Button \n                    type=\"primary\"\n                    onClick={(e) => {\n                        notification.success({\n                            message: \"Recipe Ordered\",\n                            placement: \"bottomRight\",\n                          });\n                        this.setState({ slotModal: false });\n                    }}\n                >\n                    Order Now\n                </Button>,\n                ]}\n                onCancel={(e) => {\n                this.setState({slotModal: false });\n                }}\n            >\n            <div className=\"row\">\n\n                <div className=\"col-sm-12\">\n                    <div className=\"form-group\">\n                        <label for=\"name\">Name</label>\n                        <Input\n                        type=\"text\"\n                        placeholder=\"Name\"\n                        value={this.state.name}\n                        disabled\n                        onChange={(e) =>\n                            this.setState({\n                            name: e.target.value,\n                            errName: e.target.value !== \"\" ? false : true,\n                            })\n                        }\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                        <label for=\"phone\">category</label>\n                        <Input\n                        type=\"text\"\n                        placeholder=\"Category\"\n                        disabled\n                        value={this.state.category}\n                        onChange={(e) =>\n                            this.setState({\n                            category: e.target.value,\n                            \n                            })\n                        }\n                        />\n                    </div>\n                </div>\n                <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                        <label for=\"phone\">Label</label>\n                        <Input\n                        type=\"text\"\n                        placeholder=\"Label\"\n                        disabled\n                        value={this.state.label}\n                        onChange={(e) =>\n                            this.setState({\n                            label: e.target.value,\n                            \n                            })\n                        }\n                        />\n                    </div>\n                </div>\n\n\n            </div>\n            <div className=\"row\">\n                <div className=\"col-sm-5\">\n                    <div className=\"form-group\">\n                        <label for=\"phone\">Price for One</label>\n                        <Input\n                        type=\"text\"\n                        disabled\n                        placeholder=\"Price\"\n                        value={this.state.price}\n                        />\n                    </div>\n                </div>\n                <div className=\"col-sm-3\">\n                    <div className=\"form-group\">\n                        <label for=\"phone\">Count</label>\n                        <Input\n                        type=\"text\"\n                        placeholder=\"count\"\n                        value={this.state.count}\n                        onChange={(e) =>\n                            this.setState({\n                                count: e.target.value,\n                        })\n                        }\n                        />\n                    </div>\n                </div>\n                <div className=\"col-sm-4\">\n                    <div className=\"form-group\">\n                        <label for=\"phone\">Total Amout</label>\n                        <Input\n                        type=\"text\"\n                        placeholder=\"count\"\n                        value={this.state.count * this.state.total}\n                        onChange={(e) =>\n                            this.setState({\n                                count: e.target.value,\n                        })\n                        }\n                        />\n                    </div>\n                </div>\n\n\n            </div>\n            </Modal>\n          );\n\n          \n\n          const foodCards = this.state.foodArray.map((food) => (\n            <div className=\"col-md-4\" style={{marginTop: 5 }}>\n                <Card\n                    style={{ width: 300 }}\n                    cover={\n                    <img\n                        alt=\"food\"\n                        src= {food.image}\n                        style = {{ width : \"100%\" , height: \"175px\" }}\n                    />\n                    }\n                    actions={[\n                        <Tooltip title=\"settings\">\n                        <SettingOutlined key=\"setting\" />\n                        </Tooltip>,\n                        <Tooltip title=\"Booking\">\n                        <EditOutlined\n                            key=\"order\"\n                            onClick={() => {\n                            this.setState({\n                                slotModal: true,\n                                id: food.id,\n                                name: food.name,\n                                category: food.category,\n                                label: food.label,\n                                price: food.price,\n                                total: food.price,\n                                description: food.description,\n                                image : food.image\n                            });\n                        }}\n                        />\n                        </Tooltip>,\n                        <Tooltip title=\"View\">\n                        <EllipsisOutlined \n                            key=\"ellipsis\"\n                            onClick={() => {\n                            this.setState({\n                                visible: true,\n                                id: food.id,\n                                name: food.name,\n                                category: food.category,\n                                label: food.label,\n                                price: food.price,\n                                total: food.price,\n                                description: food.description,\n                                image: food.image\n                            });\n                        }}\n                         />\n                        </Tooltip>,\n                    ]}\n                >\n                    <Meta\n                    avatar={<Avatar src={Logo} alt=\"Logo\" />}\n                    title={food.name}\n                    description={food.description}\n                    />\n                </Card>\n            </div>\n\n          ));\n\n        return (\n          <div style={{ margin : 50 }}>\n            <Layout>\n              {createSlotModal}\n              \n                <Content className='content' style={{ padding: '0 50px' }}>\n\n                    <div \n                        className=\"row\"\n                        style = {{ marginBottom: 50 }}\n                    >\n                        {foodCards}\n                    </div>\n                    <Drawer\n                    title={this.state.name}\n                    width={900}\n                    onClose={this.onClose}\n                    visible={this.state.visible}\n                    bodyStyle={{ paddingBottom: 80 }}\n                    footer={\n                    <div\n                        style={{\n                            textAlign: 'right',\n                        }}\n                        >\n                        <Button onClick={this.onClose} style={{ marginRight: 8 }}>\n                            Cancel\n                        </Button>\n                        <Button \n                        onClick={(e) => {\n                            this.setState({\n                                visible: false,\n                                slotModal: true\n                                });\n                            }} \n                            type=\"primary\">\n                            Order Now\n                        </Button>\n                    </div>\n                    }\n                    >\n                    <div className=\"row\" style={{marginTop: 50}}>\n                    <div className=\"col-md-6\" style={{marginTop: 5 }}>\n                        <img\n                            alt=\"food\"\n                            src= {this.state.image}\n                            style = {{ width : \"75%\",height: \"200px\"}}\n                        />\n                        <Divider />\n                        <h5>Ingredients: </h5>\n                        <div>\n                            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged\n                        </div>\n\n                        <Divider />\n                        <h5>How to prepare : </h5>\n                        <div>\n                        Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages.\n                        </div>\n\n                    </div>\n                    <div \n                        className=\"col-md-6\"\n                         style={{\n                            marginTop: 5,\n                            textAlign: \"right\"\n                            \n                         }}>\n                        <h2>{this.state.name}</h2>\n                        <p>\n                            <Rate disabled defaultValue={5} />\n                        </p>\n\n                        <p>Description</p>\n                        <h6>\n                            {this.state.description}\n                        </h6>\n\n                        <div className=\"row\" style={{marginTop: 30}}>\n                            <div className=\"col-sm-4\">\n                                <Statistic title=\"Likes\" value={1128} prefix={<LikeOutlined />} />\n                            </div>\n                            <div className=\"col-sm-4\">\n                                <Statistic title=\"Calories\" value={305} prefix={<CoffeeOutlined />} />\n                            </div>\n                            <div className=\"col-sm-4\">\n                                <Statistic title=\"Feedback\" value={806} prefix={<HeartOutlined />} />\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n\n                        </div>\n                        <Divider />\n\n                         <div className=\"row\">\n                             <div className=\"col-sm-12\">\n                             {comments.length > 0 && <CommentList comments={comments} />}\n                                <Comment\n                                avatar={\n                                    <Avatar\n                                    src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n                                    alt=\"Han Solo\"\n                                    />\n                                }\n                                content={\n                                    <Editor\n                                    onChange={this.handleChange}\n                                    onSubmit={this.handleSubmit}\n                                    submitting={submitting}\n                                    value={value}\n                                    />\n                                }\n                                />\n                             </div>\n                        </div>\n\n                    </div>\n                </div>\n\n                    </Drawer>\n                     \n                </Content>\n                \n            </Layout>\n            {/* {viewFoodDetails} */}\n        </div>\n        )\n    }\n}\n\nexport default Recipe;","import axios from \"axios\";\nimport { SERVER_URI, APP_KEY } from \"../globals\";\n\nexport const registerCandidate = async (\n  name,\n  email,\n  phone,\n) => {\n  try {\n    let res = null;\n    let url = null;\n    url = `${SERVER_URI}/candidates/register`;\n    res = await axios.post(\n      url,\n      { name, email, phone},\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"X-Key\": APP_KEY,\n          Authorization: `Bearer ${localStorage.getItem(\"user\")}`,\n        },\n      }\n    );\n\n    return res.data;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\nexport const getCandidates = async (paginate) => {\n  try {\n    const resObj = await fetch(SERVER_URI + `/candidates/fetch/all/${paginate}`, {\n      method: \"get\",\n      headers: {\n        \"X-Key\": APP_KEY,\n        Authorization: `Bearer ${localStorage.getItem(\"user\")}`,\n      },\n    });\n\n    const res = await resObj.json();\n    console.log(res.data)\n    return res.data;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\n\n\nexport const deleteCandidate = async (candidateId) => {\n  \n  try {\n    console.log(candidateId);\n    let res = null;\n    let url = null;\n    url = `${SERVER_URI}/candidates/delete/${candidateId}`;\n    res = await axios.post(\n      url,\n      {},\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"X-Key\": APP_KEY,\n          Authorization: `Bearer ${localStorage.getItem(\"user\")}`,\n        },\n      }\n    );\n    console.log(res);\n    return res.data;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\n\nexport const updateCandidate = async (_id, name, phone) => {\n  try {\n    console.log(_id+\":\"+name+\":\"+phone)\n    let res = null;\n    let url = null;\n    url = `${SERVER_URI}/candidates/update`;\n    res = await axios.post(\n      url,\n      { _id, name, phone},\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"X-Key\": APP_KEY,\n          Authorization: `Bearer ${localStorage.getItem(\"user\")}`,\n        },\n      }\n    );\n    // console.log(res);\n    return res.data;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\nexport const getCandidateById = async (candidateId) => {\n  try {\n    let res = null;\n    let url = null;\n    url = `${SERVER_URI}/candidates/fetch/details/${candidateId}`;\n    res = await axios.get(url, {\n        headers: {\n            \"X-Key\": APP_KEY,\n            Authorization: `Bearer ${localStorage.getItem(\"user\")}`,\n          }\n    })\n    return res.data\n}\ncatch(error) {\n    return error\n}\n};\n\n\n","import React, { Component } from \"react\";\nimport {\n    getCandidates,\n    updateCandidate,\n    deleteCandidate,\n    registerCandidate\n  } from \"../../actions/candidateActions\";\n//   import Navbar from \"../Navbar\";\n\nimport { Modal } from \"react-bootstrap\";\n\n\nimport {\n    notification,\n    Button,\n    Switch,\n    Pagination,\n    List,\n    Tooltip,\n    Avatar,\n    Divider,\n    Select,\n    Result,\n    Skeleton,\n    Empty,\n    Form,\n    Input,\n  } from \"antd\";\n  import Icon, {  DeleteOutlined,EditOutlined } from '@ant-design/icons';\n  import moment from \"moment\";\n\n  class Vote extends Component {\n\n    state = {\n        userId: \"\",\n        editUserModal: false,\n        deleteUserModal: false,\n        userArray: [],\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        username: \"\",\n        visible: true,\n        isCustomerAdmin: false,\n        currentPage: 1,\n        totalUsers: 0,\n        pageLoading: false,\n        createUserModal: false,\n        password: \"\",\n        password2: \"\",\n        loading: false,\n        userModal: false,\n        errName: false,\n        errPhone: false,\n        errEmail: false,\n        errUsername: false,\n        errPassword: false,\n        errPassword2: false,\n        errPasswordMatch: false,\n        errEmailFormat: false,\n      };\n\n      componentDidMount() {\n\n        this._getUserInfo();\n      }\n\n      _getUserInfo = () => {\n        let users = getCandidates(\n          this.state.currentPage\n        );\n        users.then((res, err) => {\n          if (err) console.log(err);\n          else {\n            console.log(res);\n            this.setState(\n              { userArray: res.candidates, totalUsers: res.totalCandidates },\n              () => {\n                this.setState({ pageLoading: false });\n              }\n            );\n          }\n        });\n      };\n\n      \n\n     \n\n\n\n\n    render(){\n        \n\n          let content = (\n            \n              \n            <div style={{ margin: \"80px\"}}>\n              \n              <List\n                itemLayout=\"horizontal\"\n                dataSource={this.state.userArray}\n                renderItem={(user) => (\n                  <List.Item\n                    className=\"list-item\"\n                    style={{\n                      padding: \"1.5%\",\n                      paddingTop: \"2.5%\",\n                    }}\n                  >\n                    <List.Item.Meta\n                      avatar={\n                        <Avatar\n                          size={50}\n                          style={{\n                            verticalAlign: \"middle\",\n                          }}\n                        >\n                          <span style={{ fontSize: \"20px\" }}>\n                            {user.name\n                              ? user.name.split(\" \")[0][0].toUpperCase()\n                              : null}\n                            {user.name\n                              ? user.name.split(\" \")[1]\n                                ? user.name.split(\" \")[1][0]\n                                : null\n                              : null}\n                          </span>\n                        </Avatar>\n                      }\n                      title={\n                        <span style={{ fontSize: \"18px\", fontWeight: \"500\" }}>\n                          {user.name}\n                        </span>\n                      }\n                      description={\n                        <div>\n                          <p>\n                            {/* <span style={{ color: \"#16bdc8\" }}>{user.email}</span>\n                            <Divider type=\"vertical\" />\n      \n                            <span style={{ fontSize: \"12px\" }}>{user.phone}</span>\n      \n                            <Divider type=\"vertical\" /> */}\n      \n                            <span style={{ fontSize: \"12px\",color: \"#16bdc8\" }}>\n                              {user.isCustomerAdmin ? \"Developer\" : \"Hacker\"}\n                            </span>\n                            <Divider type=\"vertical\" />\n                            <span style={{ fontSize: \"12px\" }}>C, C++, Python </span>\n                          </p>\n                        </div>\n                      }\n                      onClick={() => {\n                        this.setState({ selectedUser: user }, () => {\n                          console.log(this.state.selectedUser.isCustomerAdmin)\n                          this.setState({ userModal: true });\n                        });\n                      }}\n                      style={{ cursor: \"pointer\" }}\n                    />\n      \n                    <div className=\"edit-delete\">\n                    \n                    <Tooltip placement=\"bottom\" title=\"Vote\">\n                      <Button\n                      visible = {this.state.visible}\n                       icon={<EditOutlined />}\n                       style= {{\n                        margin : 5\n                      }}\n                      onMouseEnter={() => {\n                        \n                        this.setState({ editHover: true });\n                      }}\n\n                      onMouseLeave={() => {\n                        \n                        this.setState({ editHover: false });\n                      }}\n\n                      onClick={() => {\n                        \n                        this.setState(\n                          {\n                            userId: user._id,\n                            name: user.name,\n                            email: user.email,\n                            phone: user.phone,\n                            visible: this.state.visible ? false : true \n                          },\n                          ()=>{\n                            this.setState({deleteUserModal: true })\n                          }\n                        );\n                      }}\n                       >\n                         <span style={{ color: \"#16bdc8\" }}>Vote</span>\n                      </Button>\n                      \n                        \n                      </Tooltip>\n                \n                      \n                    </div>\n                  </List.Item>\n                )}\n              />\n            </div>\n          );\n\n\n          \n\n          let deletemodal = (\n            <Modal\n              aria-labelledby=\"contained-modal-title-vcenter\"\n              show={this.state.deleteUserModal}\n              onHide={() => {\n                this.setState({ deleteUserModal: false });\n              }}\n              centered\n            >\n              <Modal.Header closeButton>\n                <Modal.Title></Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n              <Result\n                status=\"success\"\n                title=\"Successfully Registered!\"\n                subTitle=\"Thank you for giving your contributions for this Selection\"\n              />\n              </Modal.Body>\n            </Modal>\n          );\n\n\n\n        return(\n\n          <div>\n        {/* <Navbar /> */}\n        {deletemodal}\n        <div style={{ padding: \"2%\" }}>\n        <h3 style={{ margin: \"20px\",textAlign: \"center\" }}>Hackers Voting System</h3>\n          {this.state.pageLoading ? (\n            <Skeleton active />\n          ) : this.state.userArray.length > 0 ? (\n            content\n          ) : (\n            <Empty\n              imageStyle={{\n                height: 300,\n              }}\n              description={<h2 style={{ fontWeight: \"200\" }}>No Candidates yet!</h2>}\n            >\n              \n            </Empty>\n          )}\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          <Pagination\n            current={this.state.currentPage}\n            onChange={(page) => {\n              this.setState({ currentPage: page }, () => {\n                this._getUserInfo();\n              });\n            }}\n            itemRender={(current, type, originalElement) => {\n              if (type === \"prev\") {\n                return (\n                  <a>\n                    <Icon type=\"left\" />\n                  </a>\n                );\n              }\n              if (type === \"next\") {\n                return (\n                  <a>\n                    <Icon type=\"right\" />\n                  </a>\n                );\n              }\n              return originalElement;\n            }}\n            total={this.state.totalUsers}\n          />\n        </div>\n      </div>\n\n        );\n    }\n\n  }\n\n\nexport default Vote;","import React, { Component } from \"react\";\r\nimport { Avatar, Button, Menu, Dropdown } from \"antd\";\r\nimport { UserOutlined,\r\n         BellOutlined,\r\n         SettingOutlined } from \"@ant-design/icons\";\r\nimport biPolarLogo from \"./../../assets/react.png\";\r\nimport \"./navbar.css\";\r\n\r\nclass NavBar extends Component {\r\n  logout = () => {\r\n    localStorage.clear();\r\n    window.history.go(\"/\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"nav-bar\">\r\n        <nav bg=\"light\" expand=\"lg\" className=\"p-2\">\r\n          <a href=\"/dashboard/home\">\r\n            <img\r\n              src={biPolarLogo}\r\n              alt=\"biPolar\"\r\n              style={{ width: \"4%\" }}\r\n              className=\"logo-white mb-2\"\r\n            />\r\n          </a>\r\n          <ul className=\"\">\r\n            <li>\r\n              <Button type=\"link\">\r\n                <SettingOutlined\r\n                  style={{ fontSize: \"1.5rem\", color: \"#3b3b3b\" }}\r\n                />\r\n              </Button>\r\n            </li>\r\n            <li>\r\n              <Button type=\"link\">\r\n                <BellOutlined\r\n                  style={{ fontSize: \"1.5rem\", color: \"#3b3b3b\" }}\r\n                />\r\n              </Button>\r\n            </li>\r\n\r\n            <li>\r\n              <Dropdown\r\n                overlay={\r\n                  <Menu style={{ width: \"150px\", textAlign: \"center\" }}>\r\n                    <Menu.Item key=\"0\">\r\n                      <a href=\"#0\">Profile</a>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"1\">\r\n                      <a href=\"#0\">Preferences</a>\r\n                    </Menu.Item>\r\n                    <Menu.Divider />\r\n                    <Menu.Item key=\"3\" onClick={this.logout}>\r\n                      <Button type=\"primary\" danger style={{ width: \"100%\" }}>\r\n                        Logout\r\n                      </Button>\r\n                    </Menu.Item>\r\n                  </Menu>\r\n                }\r\n                trigger={[\"click\"]}\r\n                placement=\"bottomLeft\"\r\n              >\r\n                <Button\r\n                  type=\"link\"\r\n                  className=\"ant-dropdown-link\"\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  <Avatar size=\"large\" icon={<UserOutlined />} />{\" \"}\r\n                </Button>\r\n              </Dropdown>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\nimport './loader.css'\n\nclass Loader extends Component {\n    render() {\n        return (\n            <div class=\"sk-chase sk-center\">\n                <div class=\"sk-chase-dot\"></div>\n                <div class=\"sk-chase-dot\"></div>\n                <div class=\"sk-chase-dot\"></div>\n                <div class=\"sk-chase-dot\"></div>\n                <div class=\"sk-chase-dot\"></div>\n                <div class=\"sk-chase-dot\"></div>\n            </div>\n        )\n    }\n}\n\nexport default Loader","import React, { Component } from \"react\";\nimport Highlighter from 'react-highlight-words';\nimport {\n  getCandidates,\n  updateCandidate,\n  deleteCandidate,\n  \n  } from \"../../../../actions/candidateActions\";\n\n  import { Redirect } from \"react-router-dom\";\n  \n\n\nimport Loader from './../../../Loader/loader';\n\n\nimport {\n    notification,\n    Button,\n    Tooltip,\n    Input,\n    Layout,\n    Pagination,\n    Table,\n    Checkbox,\n    Menu,\n    Dropdown,\n    Modal\n  } from \"antd\";\n\n  \n  \n  import {  DeleteOutlined,EditOutlined,SearchOutlined,PlusOutlined,DownOutlined,LeftOutlined,RightOutlined } from '@ant-design/icons';\n  \n\n  const { Content } = Layout;\n  const { Search } = Input;\n  \n\n  \n  class Candidates extends Component {\n\n    state = {\n        userId: \"\",\n        editUserModal: false,\n        deleteUserModal: false,\n        userArray: [],\n        userArrayTemp: [],\n        selectedRowKeys: [],\n        datasource: [],\n        selectAll: false,\n        selectedUsers: [],\n        selectedUserId : \"\",\n        selectedName : null,\n        user : null,\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        username: \"\",\n        searchField: \"\",\n        currentPage: 1,\n        totalUsers: 0,\n        createUserModal: false,\n        password: \"\",\n        password2: \"\",\n        loading: false,\n        userModal: false,\n        errName: false,\n        errPhone: false,\n        errEmail: false,\n        errUsername: false,\n        errPassword: false,\n        errPassword2: false,\n        errPasswordMatch: false,\n        errEmailFormat: false,\n        redirect : false,\n      };\n\n      \n\n      componentDidMount() {\n        if (JSON.parse(localStorage.getItem(\"user\"))) {\n          notification.success({\n              message: \"Dashboard opened successfully\",\n              placement: \"bottomRight\",\n            });\n        }\n        \n\n        this._getUserInfo();\n      }\n\n      _getUserInfo = () => {\n        this.setState({ loading : true });\n        let candidates = getCandidates(\n          this.state.currentPage\n        );\n        candidates.then((res, err) => {\n          if (err) console.log(err);\n          else {\n            console.log(res);\n            this.setState(\n              { \n                userArray: res.candidates,\n                userArrayTemp: res.candidates,\n                totalUsers: res.totalCandidates,\n                selectAll : true,\n                loading : false\n              },\n              () => {\n                this.state.userArray.map((user) => {\n                  if(!this.state.selectedUsers.includes(user._id)) {\n                    return this.setState({ selectAll : false })\n                  }\n                })\n              }  \n            );\n          }\n        });\n      };\n\n      updateUser = (e) => {\n        e.preventDefault();\n    \n        if (\n          this.state.name !== \"\" &&\n          this.state.phone !== \"\" &&\n          this.state.username !== \"\"\n        ) {\n          this.setState({ loading: false });\n          console.log(JSON.parse(localStorage.getItem(\"user\")).user.name+ \":\" +JSON.parse(localStorage.getItem(\"user\")).user.isCustomerAdmin);\n          let data = updateCandidate(\n            JSON.parse(localStorage.getItem(\"user\")).user.customer,\n            this.state.userId,\n            this.state.name,\n            this.state.phone,\n            this.state.username,\n          );\n          data.then((res, err) => {\n            if (err) {\n              console.log(err);\n              notification.error({\n                message: \"User could not be updated\",\n                placement: \"bottomRight\",\n              });\n            } else {\n              if (res) {\n                notification.success({\n                  message: \"User Updated Successfully\",\n                  placement: \"bottomRight\",\n                });\n                this.setState({\n                  userId: \"\",\n                  name: \"\",\n                  email: \"\",\n                  phone: \"\",\n                  username: \"\",\n                  loading: false,\n                  editUserModal: false,\n                });\n                this._getUserInfo();\n              } else {\n                notification.error({\n                  message: \"User could not be updated\",\n                  placement: \"bottomRight\",\n                });\n              }\n            }\n          });\n        }\n      };\n\n      deleteUser = (e) => {\n        e.preventDefault();\n        this.setState({ loading: false });\n        let data = deleteCandidate(\n            JSON.parse(localStorage.getItem(\"user\")).user.customer,\n            this.state.userId\n          );\n        data.then((res, err) => {\n          if (err) {\n            console.log(err);\n            notification.error({\n              message: \"User could not be deleted\",\n              placement: \"bottomRight\",\n            });\n          } else {\n            if (res) {\n              notification.success({\n                message: \"User Deleted Successfully\",\n                placement: \"bottomRight\",\n              });\n              this.setState({\n                userId: \"\",\n                name: \"\",\n                email: \"\",\n                phone: \"\",\n                username: \"\",\n                loading: false,\n                deleteUserModal: false,\n              });\n              this._getUserInfo();\n            } else {\n              notification.error({\n                message: \"User could not be deleted\",\n                placement: \"bottomRight\",\n              });\n              this.setState({\n                userId: \"\",\n                name: \"\",\n                email: \"\",\n                phone: \"\",\n                username: \"\",\n                loading: false,\n                deleteUserModal: false,\n              });\n            }\n          }\n        });\n      };\n\n      \n      clearInputs = (e) => {\n        e.preventDefault();\n        this.setState({\n          name: \"\",\n          email: \"\",\n          phone: \"\",\n          username: \"\",\n          password: \"\",\n          password2: \"\",\n          errName: false,\n          errEmail: false,\n          errUsername: false,\n          errPhone: false,\n          errPassword: false,\n          errPassword2: false,\n          errPasswordMatch: false,\n          errEmailFormat: false,\n        });\n      };\n\n     \n      \n    \n      handleSearch = (value) => {\n        this.setState({ \n          userArray : this.state.userArrayTemp,\n          searchField : value\n         }, () => {\n            this.setState((prevState) => (\n              {\n                userArray : prevState.userArray.filter((user) => {\n                if(user.name.toLowerCase().includes(value.toLowerCase()) || user.email.toLowerCase().includes(value.toLowerCase())) {\n                  return user\n                }\n              })\n            }))\n          });\n      }\n    \n      handleClear = (e) => {\n        if(e.target.value === '' ) {\n          this.setState(\n            {\n              searchField: \"\",\n              //  userArray : this.state.userArrayTemp\n              userArray:[]\n            });\n            this._getUserInfo();\n        }\n      };\n\n      start = () => {\n        this.setState({ loading: true });\n        // ajax request after empty completing\n        setTimeout(() => {\n          this.setState({\n            selectedRowKeys: [],\n            loading: false,\n          });\n        }, 1000);\n      };\n\n\n      onSelectChange = selectedRowKeys => {\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\n        this.setState({ selectedRowKeys });\n      };\n\n      handleClick = (e) => {\n        console.log(e.currentTarget.id);\n        // alert(e.currentTarget.id);\n        this.setState({ selectedUserId: e.currentTarget.id, redirect: true })\n      }\n\n      \n      render(){\n\n        const menu = (\n            <Menu>\n              <Menu.Item\n              onClick={(e) => {\n\n                this.setState({ deleteUserModal: true });\n            }}\n              >\n                Delete\n              </Menu.Item>\n            </Menu>\n          );\n          \n\n          let headerOptions = (\n            <div\n              className= \"header-design\" \n            >\n                  <Button\n                  type=\"primary\"\n                  icon={<PlusOutlined/>}\n                  onClick={() => {\n                    this.setState({\n                      createUserModal: false,\n                      name: \"\",\n                      username: \"\",\n                      email: \"\",\n                      phone: \"\",\n                      errName: false,\n                      errPhone: false,\n                      errEmail: false,\n                      errUsername: false,\n                      errPassword: false,\n                      errPassword2: false,\n                      errPasswordMatch: false,\n                      errEmailFormat: false,\n                      loading: false,\n                    });\n                    this.props.history.push(\"/dashboard/home/candidates/new\");\n                  }}\n                  style={{ marginBottom: \"20px\" }}\n                >\n                  New Candiate\n                </Button>\n\n                <Dropdown\n                disabled = {\n                  this.state.selectedUsers.length ? false : true\n                }\n                trigger={['click']}\n                 overlay={menu}\n                 placement=\"bottomCenter\"\n                 arrow\n                >\n                <Button\n                type=\"secondary\"\n                // onClick={this.start}\n                style = {{marginLeft : 7 }}  \n                >\n                  Actions <DownOutlined style={{ transform: \"translate(0, -1px)\" }}/>\n                </Button>\n                </Dropdown>\n                <span style={{ marginLeft: 8 }}>\n                {\n                        this.state.selectedUsers.length ? \n                          (this.state.selectedUsers.length == 1 ?\n                        `Selected ${this.state.selectedUsers.length} User` : `Selected ${this.state.selectedUsers.length} Users`)\n                        : null\n                    }\n                </span>\n              \n               \n                <div className=\"float-right d-flex inline\">\n                <Search\n                  placeholder='Search'\n                  enterButton={<SearchOutlined/>}\n                  size=\"medium\"\n                  allowClear\n                  onChange={this.handleClear}\n                  onSearch={this.handleSearch}\n                  style={{ width: 250}}\n                />\n                   \n                </div>\n              \n            </div>\n            \n          );\n\n          const tableBody = this.state.userArray.map((item) => (\n            <tr>\n                <th scope='row' className='pl-3'>\n                    <Checkbox\n                        checked={\n                            this.state.selectAll\n                                ? true\n                                : this.state.selectedUsers.includes(item._id)\n                                ? true\n                                : false\n                        }\n                        onChange={(e) => {\n                            if (e.target.checked) {\n                                let usersArray = this.state.selectedUsers;\n                                usersArray.push(item._id);\n                                this.setState({ selectedUsers: usersArray });\n                            } else {\n                                let filteredArray = this.state.selectedUsers.filter(\n                                    (i) => i !== item._id\n                                );\n                                this.setState(\n                                    { selectedUsers: filteredArray, \n                                      selectAll: false \n                                    }\n                                );\n                            }\n                            if(this.state.selectedUsers.length === 1) {\n                              let temp = this.state.userArray.filter((user) => {\n                                if(user._id === this.state.selectedUsers[0])\n                                  return user\n                              })\n                              this.setState({ selectedName : temp }, () => { console.log(this.state.selectedName)})\n                            }\n                        }}\n                    ></Checkbox>\n                </th>\n                <td>\n                    <Button\n                        type='link'\n                        className='p-0'\n                        id={item._id}\n                        onClick={\n                          this.handleClick\n                          // this.props.history.push(\"/dashboard/users/manage/edit\")\n                        }\n                    >\n                        <Highlighter\n                            highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n                            searchWords={[this.state.searchField]}\n                            autoEscape\n                            textToHighlight={item.name.toString()}\n                        />\n                    </Button>\n                </td>\n                <td>\n                  {/* {item.email} */}\n                  <Highlighter\n                      highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n                      searchWords={[this.state.searchField]}\n                      autoEscape\n                      textToHighlight={item.email.toString()}\n                  />\n                </td>\n                <td>{item.phone}</td>\n                \n            </tr>\n        ));\n          \n        return(\n          <Layout>\n            <Content className=\"content\">\n            {this.state.selectedUserId ? (\n                <Redirect\n                  to={`/dashboard/home/candidates/${this.state.selectedUserId}`}\n                />\n              ) : null}\n            <div>\n            \n            {headerOptions}\n\n            <table className='table table-hover mt-1'>\n                <colgroup>\n                  <col width='20'/>\n                  <col width='100'/>\n                  <col width='100'/>\n                  <col width='100'/>\n                </colgroup>\n                <thead style={{ backgroundColor: \"#ececec\" }}>\n                    <tr>\n                        <th scope='col' className='p-3 pl-0'>\n                            <Checkbox\n                              checked={this.state.selectAll}\n                              onChange={(e) => {\n                                if (e.target.checked) {\n                                  this.setState({ selectAll: true }, () => {\n                                    let usersArray = this.state.selectedUsers;\n                                    this.state.userArray.map((item) => {\n                                      if (!usersArray.includes(item._id))\n                                        usersArray.push(item._id);\n                                    });\n                                    this.setState(\n                                      {\n                                        selectedUsers: usersArray,\n                                      }\n                                    );\n                                  });\n                                } else {\n                                  console.log(\"ok\");\n                                  this.setState({ selectAll: false }, () => {\n                                    let usersArray = this.state.selectedUsers;\n                                    let temp = [];\n                                    let exclude = [];\n\n                                    this.state.userArray.map((item) => {\n                                      if (usersArray.includes(item._id)) {\n                                        exclude.push(item._id);\n                                      }\n\n                                      temp = usersArray.filter((user) => {\n                                        if (!exclude.includes(user))\n                                          return user;\n                                      });\n                                    });\n\n                                    this.setState(\n                                      {\n                                        selectedUsers: temp,\n                                      }\n                                    );\n                                  });\n                                }\n                              }}\n                            ></Checkbox>\n                        </th>\n                        <th scope='col' className='p-3'>\n                            Name\n                        </th>\n                        <th scope='col' className='p-3'>\n                            Email Id\n                        </th>\n                        <th scope='col' className='p-3'>\n                            Phone No\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>{tableBody}</tbody>\n            </table>\n            {this.state.loading ? \n                (<div className='no-results'>\n                  <Loader/>\n                </div>) : \n                null \n              }\n\n              {this.state.userArray.length || this.state.loading ? null : (\n                <p className='text-muted no-results'>No results found.</p>\n              )}\n\n            <div style={{ textAlign: \"right\" }}>\n              <Pagination\n                current={this.state.currentPage}\n                onChange={(page) => {\n                  this.setState({\n                    userArray: [], \n                    currentPage: page,\n                    selectAll: false,\n                  }, () => {\n                    this.state.searchField\n                    ? this.handleSearch()\n                    : this._getUserInfo();\n                  });\n                }}\n                total={this.state.totalUsers}\n              />\n            </div>\n              \n              <br/><br/>\n              <Modal\n                centered\n                title='Confirm Delete'\n                visible={this.state.deleteUserModal}\n                footer={[\n                  <Button\n                    onClick={(e) => {\n                      this.setState({ deleteUserModal: false });\n                    }}\n                  >\n                    Cancel\n                  </Button>,\n                  <Button type='primary' danger onClick={this.deleteMultipleUser}>\n                    Delete\n                  </Button>,\n                ]}\n                onCancel={(e) => {\n                  this.setState({ deleteUserModal: false });\n                }}\n              >\n                <p>\n                {this.state.selectedUsers.length === 1 ?\n                  (<p>Do you want to delete {this.state.selectedName[0].name}?</p>) :\n                  (<p>Do you want to delete the selected {this.state.selectedUsers.length} Users?</p>)\n                }\n                </p>\n              </Modal>\n            \n            \n          </div>\n          </Content>\n        </Layout>\n\n        );\n    }\n\n  }\n\n\nexport default Candidates;","import React, { Component } from 'react'\nimport { Layout,notification,Button,Tooltip,Input,PageHeader,Card,Form } from 'antd';\n\nimport { Modal } from \"react-bootstrap\";\nimport { registerCandidate,getCandidates } from \"../../../../actions/candidateActions\";\n\nconst { Content } = Layout;\n\nconst layout = {\n  labelCol: { span: 5 },\n  wrapperCol: { span: 8 },\n};\n\nclass NewCandidate extends Component {\n    state = {\n        userId: \"\",\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        username: \"\",\n        allUsers: [],\n        createUserModal: false,\n        password: \"\",\n        password2: \"\",\n        loading: false,\n        userModal: false,\n        errName: false,\n        errPhone: false,\n        errEmail: false,\n        errUsername: false,\n        errPassword: false,\n        errPassword2: false,\n        errPasswordMatch: false,\n        errEmailFormat: false,\n        duplicateErr: false,\n        \n      };\n\n      componentDidMount = () => {\n        let customerId = JSON.parse(localStorage.getItem('user')).user.customer\n        let data =  getCandidates();\n        data.then((res) => {\n            // console.log(res);\n            this.setState({ allUsers : res });\n            console.log(this.state.allUsers);\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    }\n\n      register = (e) => {\n        e.preventDefault();\n        \n\n        if (this.state.name === \"\") this.setState({ errName: true });\n        if (this.state.email === \"\") this.setState({ errEmail: true });\n        if (this.state.phone === \"\") this.setState({ errPhone: true });\n       \n       \n      \n        if (\n          !this.state.errName &&\n          !this.state.errEmail &&\n          !this.state.errPhone &&\n          !this.state.errEmailFormat\n        ) {\n          \n          if (\n            this.state.name !== \"\" &&\n            this.state.email !== \"\" &&\n            this.state.phone !== \"\" \n          ) {\n            this.setState({ loading: true });\n            console.log(\"User Object is clicked\");\n            \n            let data = registerCandidate(\n              this.state.name,\n              this.state.email,\n              this.state.phone\n            );\n            data.then((res, err) => {\n              if (err) {\n                console.log(err);\n                notification.error({\n                  message: \"Candidate could not be created\",\n                  placement: \"bottomRight\",\n                });\n              } else {\n                if (res) {\n                  notification.success({\n                    message: \"Candidate Registered Successfully\",\n                    placement: \"bottomRight\",\n                  });\n                  this.setState({\n                    loading: false,\n                  });\n                  this.props.history.push('/dashboard/home/candidates');\n\n\n                } else {\n                  notification.error({\n                    message: \"Candidate could not be created.\",\n                    placement: \"bottomRight\",\n                  });\n                  this.setState({\n                    loading: false,\n                  });\n                }\n              }\n            });\n          }\n        }\n      };\n\n      clearInputs = (e) => {\n        e.preventDefault();\n        this.setState({\n          name: \"\",\n          email: \"\",\n          phone: \"\",\n          username: \"\",\n          password: \"\",\n          password2: \"\",\n          errName: false,\n          errEmail: false,\n          errUsername: false,\n          errPhone: false,\n          errPassword: false,\n          errPassword2: false,\n          errPasswordMatch: false,\n          errEmailFormat: false,\n        });\n      };\n\n      handleBack = (e) => {\n        this.props.history.push('/dashboard/home/candidates')\n    }\n\n    render() {\n        \n        return (\n            <Layout>\n                <Content className='content'>\n                    <PageHeader\n                      onBack={this.handleBack}\n                      title=\"New Candidate\"\n                    />\n                    <div className='template-form'>\n                    <br/><br/>\n                  <Form\n                  {...layout}\n                     name=\"basic\"\n                     labelAlign=\"left\"\n                     onSubmit={this.register}\n                    >\n                      <Form.Item\n                         label=\"Name\"\n                         name=\"Name\"\n                         required>\n                          <Input\n                            required\n                            type=\"text\"\n                            placeholder=\"Name\"\n                            value={this.state.name}\n                            onChange={(e) =>\n                            this.setState({\n                                name: e.target.value,\n                                errName: e.target.value !== \"\" ? false : true,\n                            })\n                            }\n                            style={{\n                            border: `${this.state.errName ? \"1px solid #ff6565\" : \"\"}`,\n                            }}\n                        />\n                        {this.state.errName ? (\n                            <div style={{ color: \"#ff6565\" }}>Name can't be empty</div>\n                        ) : null}\n                      </Form.Item>\n\n                      <Form.Item\n                         label=\"Email Id\"\n                         name=\"email\"\n                         required>\n                          <Input\n                            required\n                            type=\"email\"\n                            placeholder=\"Email Id\"\n                            value={this.state.email}\n                            onChange={(e) => {\n                            let re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                            this.setState({\n                                email: e.target.value,\n                                errEmail: e.target.value !== \"\" ? false : true,\n                                errEmailFormat: re.test(e.target.value) ? false : true,\n                                duplicateErr: false\n                            });\n                            }}\n                            style={{\n                            border: `${\n                                this.state.errEmail || this.state.errEmailFormat\n                                ? \"1px solid #ff6565\"\n                                : \"\"\n                            }`,\n                            }}\n                          />\n                          {this.state.errEmail ? (\n                              <div style={{ color: \"#ff6565\" }}>Email can't be empty</div>\n                          ) : null}\n                          {this.state.errEmailFormat ? (\n                              <div style={{ color: \"#ff6565\" }}>Incorrect Email Format</div>\n                          ) : null}\n                          {this.state.duplicateErr ? (\n                              <p className='text-danger'>Email Id already exists.</p>) \n                          : null}\n                      </Form.Item>\n\n                      <Form.Item\n                         label=\"Phone\"\n                         name=\"Phone\"\n                         required>\n                         <Input\n                            type=\"text\"\n                            placeholder=\"Phone\"\n                            value={this.state.phone}\n                            onChange={(e) =>\n                            this.setState({\n                                phone: e.target.value,\n                                errPhone: e.target.value !== \"\" ? false : true,\n                            })\n                            }\n                            style={{\n                            border: `${this.state.errPhone ? \"1px solid #ff6565\" : \"\"}`,\n                            }}\n                        />\n                        {this.state.errPhone ? (\n                            <div style={{ color: \"#ff6565\" }}>Phone can't be empty</div>\n                        ) : null}\n                      </Form.Item>\n                      <Form.Item>\n                        <Button\n                          type=\"primary\" \n                          htmlType=\"submit\"\n                          style={{ marginRight: \"10px\" }}  \n                          loading={this.state.loading}\n                          onClick={this.register}>\n                            Add candiate\n                        </Button>\n                        <Button\n                          type=\"secondary\"\n                          onClick={this.clearInputs} \n                        >\n                          Clear\n                        </Button>\n                    </Form.Item>\n\n\n                    </Form>\n                    </div>\n                    \n                </Content>\n            </Layout>\n        )\n    }\n}\n\nexport default NewCandidate;","import React, { Component } from 'react'\nimport { Layout,\n         PageHeader,\n         Descriptions,\n         Button,\n         notification,\n         Modal } from 'antd'\n\nimport { getCandidateById,\n        deleteCandidate } from './../../../../actions/candidateActions'\n\nconst { Content } = Layout\n\nclass UserDetails extends Component {\n\n    state = {\n        user : null,\n        modal : false\n    }\n\n    componentDidMount = (e) => {\n        // console.log(this.props.match.params);\n        let data =  getCandidateById(this.props.match.params.id);\n        data.then((res) => {\n            // console.log(res);\n            this.setState({ user : res.data.candidate })\n        })\n        .catch((error) => {\n            console.log(error)\n        })\n    }\n\n    handleBack = (e) => {\n        this.props.history.push('/dashboard/home/candidates')\n    }\n\n    \n    handleEdit = (e) => {\n        this.props.history.push(`/dashboard/home/candidates/edit/${this.props.match.params.id}`)\n    }\n\n    handleDelete = (e) => {\n        let userId = this.state.user._id\n        let customerId = JSON.parse(localStorage.getItem('user')).user.customer\n        let data = deleteCandidate(customerId, userId)\n        data.then((res) => {\n            if(res.data) {\n                notification.success({\n                    message: \"User deleted successfully\",\n                    placement: \"bottomRight\",\n                });\n                this.handleBack()\n            }\n            else {\n                notification.error({\n                    message: \"User Could not to be deleted\",\n                    placement: \"bottomRight\",\n                });\n            }\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    }\n\n    handleConfirm = (e) => {\n        this.setState({ modal : true })\n    }\n\n    render() {\n\n        return(\n            <Layout>\n                <Content className='content'>\n                    <PageHeader\n                     onBack={this.handleBack}\n                     title={this.state.user ? this.state.user.name : ' '}/>\n                    {this.state.user ?\n                        (<Descriptions bordered size='small' className='mb-4 ml-4 template w-75'>\n                            <Descriptions.Item\n                             label='Name' \n                             span={3}>\n                                {this.state.user.name}\n                            </Descriptions.Item>\n                            <Descriptions.Item\n                             label='Email Id' \n                             span={3}>\n                                {this.state.user.email}\n                            </Descriptions.Item>\n                            <Descriptions.Item\n                             label='Phone No' \n                             span={3}>\n                                {this.state.user.phone}\n                            </Descriptions.Item>\n                        </Descriptions>) :\n                        (null)\n                    }                    \n                    <Button\n                     type='primary'\n                     className='ml-4'\n                     onClick={this.handleEdit}>\n                        Update\n                    </Button>\n                    <Button\n                     type='primary'\n                     danger\n                     className='ml-2'\n                     onClick={this.handleConfirm}>\n                        Delete\n                    </Button>\n                    <Modal\n                     centered\n                     title='Confirm Delete'\n                     visible={this.state.modal}\n                     footer={[\n                        <Button\n                         onClick={(e) => { this.setState({ modal : false }) }}\n                        >\n                            Cancel\n                        </Button>,\n                        <Button\n                         type='primary'\n                         danger\n                         onClick={this.handleDelete}\n                        >\n                           Delete\n                       </Button>\n                     ]}\n                     onCancel={(e) => { this.setState({ modal : false }) }}\n                    >\n                        <p>\n                            Do you want to delete <b>{this.state.user ? this.state.user.name : ' '}</b>?\n                        </p>\n                    </Modal>\n                </Content>\n            </Layout>\n        )\n    }\n}\n\nexport default UserDetails","import React, { Component } from 'react'\nimport { Layout,notification,Input,Button,Card,PageHeader,Form } from 'antd';\nimport { Modal } from \"react-bootstrap\";\n\nimport {\n    getCandidateById,\n    updateCandidate,\n    getCandidates,\n    } from \"../../../../actions/candidateActions\";\n\nconst { Content } = Layout;\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 16 },\n};\n\nclass EditUser extends Component {\n    state = {\n        userId: \"\",\n        editUserModal: false,\n        deleteUserModal: false,\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        username: \"\",\n        searchField: \"\",\n        allUsers:[],\n        currentPage: 1,\n        totalUsers: 0,\n        password: \"\",\n        password2: \"\",\n        loading: false,\n        userModal: false,\n        errName: false,\n        errPhone: false,\n        errEmail: false,\n        errUsername: false,\n        errPassword: false,\n        errPassword2: false,\n        errPasswordMatch: false,\n        errEmailFormat: false,\n        duplicateErr: false,\n        emailChange : false\n      };\n\n      componentDidMount = () => {\n\n        let data =  getCandidates();\n        data.then((res) => {\n            this.setState({ allUsers : res })\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n\n        data = getCandidateById(this.props.match.params.id);\n        data\n          .then((res) => {\n            console.log(res.data);\n            this.setState(\n              {\n                user: data.candiate,\n                userId: data.candidate._id,\n                name: data.candiate.name,\n                email: data.candidate.email,\n                phone: data.candidate.phone,\n              }\n            );\n            console.log(this.state.username);\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n    }\n\n      updateUser = (e) => {\n\n        e.preventDefault();\n\n        \n\n        \n      \n        if (this.state.name === \"\") this.setState({ errName: true });\n        if (this.state.email === \"\") this.setState({ errEmail: true });\n        if (this.state.phone === \"\") this.setState({ errPhone: true });\n        \n\n        if (\n          !this.state.errName &&\n          !this.state.errEmail &&\n          !this.state.errPhone &&\n          !this.state.errEmailFormat\n          \n        ) {\n        if (\n          this.state.name !== \"\" &&\n          this.state.phone !== \"\" &&\n          this.state.username !== \"\"\n        ) {\n          this.setState({ loading: true });\n          console.log(JSON.parse(localStorage.getItem(\"user\")).user.name+ \":\" +JSON.parse(localStorage.getItem(\"user\")).user.isCustomerAdmin);\n          let data = updateCandidate(\n            \n            this.state.userId,\n            this.state.name,\n            this.state.email,\n            this.state.phone,\n          );\n          data.then((res, err) => {\n            if (err) {\n              console.log(err);\n              notification.error({\n                message: \"User could not be updated\",\n                placement: \"bottomRight\",\n              });\n            } else {\n              if (res) {\n                notification.success({\n                  message: \"User Updated Successfully\",\n                  placement: \"bottomRight\",\n                });\n                this.setState({\n                  loading: false\n                });\n                this.props.history.push('/dashboard/home/candidates');\n              } else {\n                notification.error({\n                  message: \"User could not be updated\",\n                  placement: \"bottomRight\",\n                });\n              }\n            }\n          });\n        }\n      }\n    };\n\n      \n\n\n      handleBack = (e) => {\n        this.props.history.push(`/dashboard/home/candidates/${this.props.match.params.id}`);\n    }\n\n    clearInputs = (e) => {\n      e.preventDefault();\n      this.setState({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        username: \"\",\n        password: \"\",\n        password2: \"\",\n        errName: false,\n        errEmail: false,\n        errUsername: false,\n        errPhone: false,\n        errPassword: false,\n        errPassword2: false,\n        errPasswordMatch: false,\n        errEmailFormat: false,\n        duplicateErr: false,\n      });\n    };\n\n    \n\n\n    render() {\n        \n        return (\n            <Layout>\n                <Content className='content'>\n                <PageHeader\n                     onBack={this.handleBack}\n                     title= {this.state.user ? \"Update User : \"+this.state.user.name : ' '}\n                />\n                \n                <div className='template-form'>\n                    <br/><br/>\n                  <Form\n                    {...layout}\n                     name=\"basic\"\n                     onSubmit={this.updateUser}\n                     labelAlign=\"left\"\n                    >\n                      <Form.Item\n                         label=\"Name\"\n                         name=\"Name\"\n                         span={3}\n                         required>\n                          <Input\n                            required\n                            type=\"text\"\n                            placeholder=\"Name\"\n                            value={this.state.name}\n                            onChange={(e) =>\n                            this.setState({\n                                name: e.target.value,\n                                errName: e.target.value !== \"\" ? false : true,\n                            })\n                            }\n                            style={{\n                            border: `${this.state.errName ? \"1px solid #ff6565\" : \"\"}`,\n                            }}\n                        />\n                        {this.state.errName ? (\n                            <div style={{ color: \"#ff6565\" }}>Name can't be empty</div>\n                        ) : null}\n                      </Form.Item>\n\n                      <Form.Item\n                         label=\"Email Id\"\n                         name=\"email\"\n                         span={3}\n                         required>\n                          <Input\n                            required\n                            type=\"email\"\n                            placeholder=\"Email Id\"\n                            // disabled=\"true\"\n                            value={this.state.email}\n                            onChange={(e) => {\n                            let re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                            this.setState({\n                                emailChange : true,\n                                email: e.target.value,\n                                errEmail: e.target.value !== \"\" ? false : true,\n                                errEmailFormat: re.test(e.target.value) ? false : true,\n                                duplicateErr: false\n                            });\n                            }}\n                            style={{\n                            border: `${\n                                this.state.errEmail || this.state.errEmailFormat || this.state.duplicateErr\n                                ? \"1px solid #ff6565\"\n                                : \"\"\n                            }`,\n                            }}\n                          />\n                          {this.state.errEmail ? (\n                              <div style={{ color: \"#ff6565\" }}>Email can't be empty</div>\n                          ) : null}\n                          {this.state.errEmailFormat ? (\n                              <div style={{ color: \"#ff6565\" }}>Incorrect Email Format</div>\n                          ) : null}\n                          {this.state.duplicateErr ? (\n                              <p className='text-danger'>Email Id already exists.</p>) \n                          : null}\n                      </Form.Item>\n\n                      <Form.Item\n                         label=\"Phone\"\n                         name=\"Phone\"\n                         span={3}\n                         required>\n                         <Input\n                            type=\"text\"\n                            placeholder=\"Phone\"\n                            value={this.state.phone}\n                            onChange={(e) =>\n                            this.setState({\n                                phone: e.target.value,\n                                errPhone: e.target.value !== \"\" ? false : true,\n                            })\n                            }\n                            style={{\n                            border: `${this.state.errPhone ? \"1px solid #ff6565\" : \"\"}`,\n                            }}\n                        />\n                        {this.state.errPhone ? (\n                            <div style={{ color: \"#ff6565\" }}>Phone can't be empty</div>\n                        ) : null}\n                      </Form.Item>\n                      \n                      <Form.Item>\n                        <Button\n                          type=\"primary\" \n                          htmlType=\"submit\"\n                          style={{ marginRight: \"10px\" }}  \n                          loading={this.state.loading}\n                          onClick={this.updateUser}>\n                            Update\n                        </Button>\n                        <Button\n                          type=\"secondary\"\n                          onClick={this.clearInputs}\n                          \n                        >\n                          Clear\n                        </Button>\n                    </Form.Item>\n\n                      \n                    </Form>\n                    </div>\n\n                </Content>\n            </Layout>\n        )\n    }\n}\n\nexport default EditUser;","import React, { Component } from \"react\";\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\n\nimport Candidates from './candidate';\nimport NewCandidate from './newCandidate'\nimport CandidateDetails from './candidateDetails'\nimport EditCandidate from './editCandidate'\n\n\n// import S from './subNav1'\n\n\nclass Routes extends Component {\n  render() {\n    return (\n      <Switch>\n       \n        <Route exact path=\"/dashboard/home/candidates/new\" component={NewCandidate} />\n        <Route exact path=\"/dashboard/home/candidates/:id\" component={CandidateDetails} />\n        <Route exact path=\"/dashboard/home/candidates/edit/:id\" component={EditCandidate} />\n        <Route path=\"/dashboard/home/candidates\" component={Candidates} />\n        <Redirect from='/dashboard/home' to='/dashboard/home/subnav1'/>\n      </Switch>\n    );\n  }\n}\n\nexport default Routes;\n","import React, { Component } from \"react\";\nimport { Layout,\n  Menu } from 'antd';\nimport { AppstoreAddOutlined,\n  LaptopOutlined } from '@ant-design/icons'\nimport { Link } from 'react-router-dom'\nimport Routes from './HomeOptions/route'\n\n\nconst { Sider } = Layout;\n\nclass Home extends Component {\n  render() {\n\n    const { location } = this.props;\n    \n    return (\n        \n        <Layout style={{ height: '87vh' }}>\n            <Sider width={200} className=\"sidebar\">\n                <Menu\n                    mode=\"inline\"\n                    // defaultSelectedKeys={\"manage\"}\n                    defaultSelectedKeys={[location.pathname.split('/')[3]]}\n                    defaultOpenKeys={[location.pathname.split('/')[2]]}\n                    style={{ height: '100%', borderRight: 0 }}>   \n                    <Menu.Item\n                        key=\"candidates\" \n                        icon={<LaptopOutlined />}\n                    >\n                        <Link to='/dashboard/home/candidates'/>\n                        Candidates\n                    </Menu.Item>    \n                </Menu>\n            </Sider>                    \n            <Routes/>\n        </Layout>\n\n        \n    )\n}\n}\nexport default Home;\n","import React, { Component } from \"react\";\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport Home from \"./DashboardTabs/Home\";\n\n\nclass TabRoutes extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/dashboard/home\" component={Home} />\n        <Redirect from=\"/dashboard\" to=\"/dashboard/home\" />\n      </Switch>\n    );\n  }\n}\n\nexport default TabRoutes;\n","import React, { Component } from \"react\";\nimport NavBar from \"../Navbar/navbar\";\nimport \"./dashboard.css\";\nimport TabRoutes from \"../tabRoutes\";\n\nclass UserDashboard extends Component {\n  render() {\n    const { location } = this.props;\n\n    return (\n      <div className=\"dashboard\">\n        <div className=\"sticky-top\">\n          <NavBar /> \n          <nav className=\"tab-bar\">\n            <a\n              href=\"/dashboard/home\"\n              id=\"home\"\n              style = {{ width: 200 }}\n              className={\n                location.pathname.includes(\"/dashboard/home\") ? \"active\" : null\n              }\n            >\n              Home\n            </a>\n          </nav>\n        </div>\n        <TabRoutes />\n      </div>\n    );\n  }\n}\n\nexport default UserDashboard;\n","import React, { Component } from \"react\";\r\nimport {\r\n  Route,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./register\";\r\nimport Recipe from \"./Recipe\";\r\nimport Vote from \"./Vote\";\r\nimport Dashboard from './Dashboard/dashboard'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  let loggedIn = JSON.parse(localStorage.getItem(\"user\"));\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        loggedIn && loggedIn.token && loggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nclass Routes extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Vote} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/register\" component={Register} />\r\n        <Route exact path=\"/recipe\" component={Recipe} />\r\n        <PrivateRoute path='/dashboard' component={Dashboard}/>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\nimport Routes from \"./components/Routes\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/react.cd7bb6be.png\";"],"sourceRoot":""}